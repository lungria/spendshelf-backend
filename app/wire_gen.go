// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package app

import (
	"github.com/lungria/spendshelf-backend/api"
	"github.com/lungria/spendshelf-backend/api/handler"
	"github.com/lungria/spendshelf-backend/app/config"
	"github.com/lungria/spendshelf-backend/importer"
	"github.com/lungria/spendshelf-backend/importer/account"
	"github.com/lungria/spendshelf-backend/importer/interval"
	"github.com/lungria/spendshelf-backend/importer/transaction"
	"github.com/lungria/spendshelf-backend/storage"
)

// Injectors from wire.go:

func InitializeApp() (*State, error) {
	scheduler := NewSchedulerProvider()
	configConfig, err := config.FromEnv()
	if err != nil {
		return nil, err
	}
	client := NewMonoAPIProvider(configConfig)
	pool, err := NewDbPoolProvider(configConfig)
	if err != nil {
		return nil, err
	}
	postgreSQLStorage := storage.NewPostgreSQLStorage(pool)
	generator := interval.NewGenerator(postgreSQLStorage)
	defaultImporter := transaction.NewImporter(client, postgreSQLStorage, generator)
	accountsStorage := storage.NewAccountsStorage(pool)
	accountDefaultImporter := account.NewDefaultImporter(client, accountsStorage)
	importerImporter := importer.NewImporter(defaultImporter, accountDefaultImporter)
	categoryStorage := storage.NewCategoryStorage(pool)
	transactionHandler := handler.NewTransactionHandler(postgreSQLStorage, categoryStorage)
	accountHandler := handler.NewAccountHandler(accountsStorage)
	v := NewRoutesProvider(transactionHandler, accountHandler)
	server := api.NewServer(configConfig, v...)
	state := NewAppStateProvider(scheduler, importerImporter, server, pool, configConfig)
	return state, nil
}
